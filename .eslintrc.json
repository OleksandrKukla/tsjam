{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": { "project": "./tsconfig.eslint.json" },
  "env": { "es6": true },
  "ignorePatterns": ["node_modules", "build", "coverage"],
  "plugins": ["import", "eslint-comments", "functional"],
  "extends": [
    "eslint:recommended",
    "plugin:eslint-comments/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/typescript",
    "plugin:functional/lite",
    "prettier",
    "prettier/@typescript-eslint"
  ],
  "globals": { "BigInt": true, "console": true, "WebAssembly": true },
  "rules": {
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-namespace": 0,
    "@typescript-eslint/restrict-plus-operands": 0,
    // Makes no sense to allow type inferrence for expression parameters, but require typing the response
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      { "allowExpressions": true, "allowTypedFunctionExpressions": true }
    ],
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-readonly-parameter-types": "error",
    "object-curly-spacing": ["error", "always"],
    "operator-linebreak": ["error", "before"],
    "spaced-comment": ["error", "always", { "exceptions": ["-", "+"] }],
    "eslint-comments/disable-enable-pair": [
      "error",
      { "allowWholeFile": true }
    ],
    "eslint-comments/no-unused-disable": "error",
    "import/order": [
      "error",
      { "newlines-between": "always", "alphabetize": { "order": "asc" } }
    ],
    "sort-imports": [
      "error",
      { "ignoreDeclarationSort": true, "ignoreCase": true }
    ],
    "no-new-object": "error",
    "prefer-destructuring": "warn",
    "no-restricted-imports": ["error", {
      "paths": [{
        "name": "../build/*",
        "message": "Please use src instead."
      }]
    }],
    "functional/no-class": 0,
    "functional/no-method-signature": 0,
    "functional/prefer-type-literal": 0,
    "functional/no-this-expression": 0,
    "functional/no-throw-statement": 0,
    "functional/no-return-void": 0
    /*"functional/prefer-readonly-type": 0*/
  },
  "overrides": [
    {
      "files": ["./*.js"],
      "excludedFiles": "*.config.js"
    }
  ]
}
